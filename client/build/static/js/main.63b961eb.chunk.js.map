{"version":3,"sources":["components/layouts/Landing.js","contexts/Constants.js","reducer/AuthReducer.js","utils/setAuthToken.js","contexts/AuthContext.js","components/layouts/AlertMessage.js","components/auths/LoginForm.js","components/auths/RegisterForm.js","views/Auth.js","reducer/postReducer.js","contexts/PostContext.js","assets/play-btn.svg","assets/pencil.svg","assets/trash.svg","components/posts/ActionButtons.js","components/posts/SinglePost.js","components/posts/AddPostModal.js","components/posts/UpdatePost.js","assets/plus-circle-fill.svg","components/posts/DeletePost.js","views/Dashboard.js","views/About.js","assets/logo.svg","assets/logout.svg","components/layouts/NavBarMenu.js","components/routing/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Langding","to","apiURL","LOCAL_STORAGE_TOKEN_NAME","POST_LOADED_SUCCESS","POST_LOADED_FAIL","ADD_POST","DELETE_POST","UPDATE_POST","FIND_POST","authReducer","state","action","type","payload","isAuthenticated","user","authLoading","setAuthToken","token","axios","defaults","headers","common","AuthContext","createBrowserHistory","createContext","AuthContextProvider","children","useReducer","authState","dispatch","loadUser","a","localStorage","get","response","data","success","removeItem","useEffect","authContextData","loginUser","userForm","post","setItem","accessToken","message","registerUser","logoutUser","Provider","value","AlertMessage","info","Alert","variant","Heading","LoginForm","useContext","useState","alert","setAlert","username","password","loginForm","setLoginForm","onChangeLoginForm","event","target","name","login","preventDefault","loginData","setTimeout","console","log","Form","onSubmit","Group","className","Control","placeholder","required","onChange","Button","RegisterForm","confirmPassword","registerForm","setRegisterForm","onChangeRegisterForm","history","useHistory","register","registerData","push","Auth","body","authRoute","Spinner","animation","postReducer","posts","postLoading","filter","_id","newPost","map","PostContext","PostContextProvider","postState","showAddPostModal","setShowAddPostModal","showUpdatePost","setShowUpdatePost","showDeletePost","setShowDeletePost","show","showToast","setShowToast","postContextData","getPosts","addPost","deletePost","postId","delete","updatePost","put","findPost","find","ActionButtons","url","href","src","playIcon","alt","width","height","onClick","bind","editIcon","deleteIcon","SinglePost","status","title","description","createAt","updateAt","Card","border","Body","Title","Row","Col","Badge","pill","style","textAlign","Text","format","AddPostModal","setNewPost","onChangeNewPostForm","closeDialog","Modal","onHide","Header","closeButton","id","muted","as","row","Footer","UpdatePost","updatedPost","setUpdatedPost","onChangeUpdatedPostForm","DeletePost","Dashboard","postsLoading","length","OverlayTrigger","placement","overlay","Tooltip","addIcon","Toast","position","top","right","onClose","delay","autohide","About","NavBarMenu","styleText","Navbar","expand","bg","padding","Brand","learnItLogo","with","margin","Toggle","Collapse","Nav","Item","Link","disabled","logoutIcon","ProtectedRoute","Component","component","rest","render","props","App","exact","path","Landing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63b961eb.chunk.js","sourcesContent":["import { Redirect } from 'react-router'\n\nconst Langding = () => {\n    return <Redirect to=\"/login\" />\n}\n\nexport default Langding\n","export const apiURL =\n    process.env.NODE_ENV !== 'production'\n        ? 'http://localhost:5000/api'\n        : 'https://learn---it.herokuapp.com/api'\n\nexport const LOCAL_STORAGE_TOKEN_NAME = 'learnit-mern'\n\nexport const POST_LOADED_SUCCESS = 'POST_LOADED_SUCCESS'\nexport const POST_LOADED_FAIL = 'POST_LOADED_FAIL'\n\nexport const ADD_POST = 'ADD_POST'\nexport const DELETE_POST = 'DELETE_POST'\nexport const UPDATE_POST = 'UPDATE_POST'\nexport const FIND_POST = 'FIND_POST'\n","export const authReducer = (state, action) => {\n    const {\n        type,\n        payload: { isAuthenticated, user },\n    } = action\n\n    switch (type) {\n        case 'SET_AUTH':\n            return {\n                ...state,\n                authLoading: false,\n                isAuthenticated,\n                user,\n            }\n\n        default:\n            return state\n    }\n}\n","import axios from 'axios'\n\nconst setAuthToken = (token) => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    } else {\n        delete axios.defaults.headers.common['Authorization']\n    }\n}\n\nexport default setAuthToken\n","import { createContext, useReducer, useEffect } from 'react'\nimport axios from 'axios'\nimport { apiURL, LOCAL_STORAGE_TOKEN_NAME } from './Constants'\nimport { authReducer } from '../reducer/AuthReducer'\n\nimport setAuthToken from '../utils/setAuthToken'\nimport { createBrowserHistory } from 'history'\n\nexport const history = createBrowserHistory()\n\nexport const AuthContext = createContext()\n\nconst AuthContextProvider = ({ children }) => {\n    const [authState, dispatch] = useReducer(authReducer, {\n        authLoading: true,\n        isAuthenticated: false,\n        user: null,\n    })\n\n    // Authenticate user\n\n    const loadUser = async () => {\n        if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\n            setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME])\n        }\n\n        try {\n            const response = await axios.get(`${apiURL}/auth`)\n            if (response.data.success) {\n                dispatch({\n                    type: 'SET_AUTH',\n                    payload: {\n                        isAuthenticated: true,\n                        user: response.data.user,\n                    },\n                })\n            }\n        } catch (error) {\n            localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\n            setAuthToken(null)\n            dispatch({\n                type: 'SET_AUTH',\n                payload: { isAuthenticated: false, user: null },\n            })\n        }\n    }\n\n    useEffect(() => loadUser(), [])\n\n    // Login\n    const loginUser = async (userForm) => {\n        try {\n            const response = await axios.post(`${apiURL}/auth/login`, userForm)\n            if (response.data.success)\n                localStorage.setItem(\n                    LOCAL_STORAGE_TOKEN_NAME,\n                    response.data.accessToken\n                )\n\n            await loadUser()\n\n            return response.data\n        } catch (error) {\n            if (error.response.data) return error.response.data\n            else return { success: false, message: error.message }\n        }\n    }\n\n    // Register\n    const registerUser = async (userForm) => {\n        try {\n            const response = await axios.post(\n                `${apiURL}/auth/register`,\n                userForm\n            )\n            if (response.data.success) return response.data\n        } catch (error) {\n            if (error.response.data) return error.response.data\n            else return { success: false, message: error.message }\n        }\n    }\n\n    // Logout\n    const logoutUser = () => {\n        localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\n        setAuthToken(null)\n        dispatch({\n            type: 'SET_AUTH',\n            payload: { isAuthenticated: false, user: null },\n        })\n    }\n\n    // Context Data\n\n    const authContextData = { loginUser, registerUser, logoutUser, authState }\n\n    // Return provider\n    return (\n        <AuthContext.Provider value={authContextData}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContextProvider\n","import Alert from 'react-bootstrap/Alert'\n\nconst AlertMessage = ({ info }) => {\n    return info === null ? null : (\n        <Alert variant={info.type}>\n            <Alert.Heading>{info.message}</Alert.Heading>\n        </Alert>\n    )\n}\n\nexport default AlertMessage\n","import Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport { Link } from 'react-router-dom'\n\nimport { useState, useContext } from 'react'\nimport { AuthContext } from '../../contexts/AuthContext'\nimport AlertMessage from '../layouts/AlertMessage'\n\nconst LoginForm = () => {\n    // Context\n    const { loginUser } = useContext(AuthContext)\n\n    const [alert, setAlert] = useState(null)\n\n    // local state\n    const [loginForm, setLoginForm] = useState({\n        username: '',\n        password: '',\n    })\n    const { username, password } = loginForm\n    const onChangeLoginForm = (event) =>\n        setLoginForm({ ...loginForm, [event.target.name]: event.target.value })\n\n    const login = async (event) => {\n        event.preventDefault()\n\n        try {\n            const loginData = await loginUser(loginForm)\n            if (!loginData.success) {\n                setAlert({ type: 'danger', message: loginData.message })\n                setTimeout(() => setAlert(null), 3000)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    return (\n        <Form onSubmit={login}>\n            <AlertMessage info={alert} />\n            <Form.Group className=\"mt-4\">\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    name=\"username\"\n                    required\n                    value={username}\n                    onChange={onChangeLoginForm}\n                />\n            </Form.Group>\n            <Form.Group className=\"mt-4\">\n                <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    required\n                    value={password}\n                    onChange={onChangeLoginForm}\n                />\n            </Form.Group>\n            <Button variant=\"success\" type=\"submit\" className=\"mt-4\">\n                Login\n            </Button>\n            <p className=\"mt-4\">\n                Don't have an account?\n                <Link to=\"/register\" className=\"m-4\">\n                    <Button variant=\"danger\">Register</Button>\n                </Link>\n            </p>\n        </Form>\n    )\n}\n\nexport default LoginForm\n","import Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport { Link } from 'react-router-dom'\n\nimport { useContext, useState } from 'react'\nimport { AuthContext } from '../../contexts/AuthContext'\nimport AlertMessage from '../layouts/AlertMessage'\nimport { useHistory } from 'react-router-dom'\n\nconst RegisterForm = () => {\n    // Context\n    const { registerUser } = useContext(AuthContext)\n\n    const [alert, setAlert] = useState(null)\n\n    // local state\n    const [registerForm, setRegisterForm] = useState({\n        username: '',\n        password: '',\n        confirmPassword: '',\n    })\n    const { username, password, confirmPassword } = registerForm\n    const onChangeRegisterForm = (event) =>\n        setRegisterForm({\n            ...registerForm,\n            [event.target.name]: event.target.value,\n        })\n    const history = useHistory()\n    const register = async (event) => {\n        event.preventDefault()\n        if (password !== confirmPassword) {\n            setAlert({ type: 'danger', message: 'Passwords do not match' })\n            setTimeout(() => setAlert(null), 3000)\n        } else\n            try {\n                const registerData = await registerUser(registerForm)\n                if (!registerData.success) {\n                    setAlert({ type: 'danger', message: registerData.message })\n                    setTimeout(() => setAlert(null), 3000)\n                } else {\n                    setAlert({ type: 'success', message: registerData.message })\n                    setTimeout(() => {\n                        setAlert(null)\n                        history.push('/login')\n                    }, 2000)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n    }\n\n    return (\n        <Form onSubmit={register}>\n            <AlertMessage info={alert} />\n            <Form.Group className=\"mt-4\">\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    name=\"username\"\n                    required\n                    value={username}\n                    onChange={onChangeRegisterForm}\n                />\n            </Form.Group>\n            <Form.Group className=\"mt-4\">\n                <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    required\n                    value={password}\n                    onChange={onChangeRegisterForm}\n                />\n            </Form.Group>\n            <Form.Group className=\"mt-4\">\n                <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    required\n                    value={confirmPassword}\n                    onChange={onChangeRegisterForm}\n                />\n            </Form.Group>\n            <Button variant=\"success\" type=\"submit\" className=\"mt-4\">\n                Register\n            </Button>\n            <p className=\"mt-4\">\n                Already have an account?\n                <Link to=\"/login\" className=\"m-4\">\n                    <Button variant=\"danger\">Login</Button>\n                </Link>\n            </p>\n        </Form>\n    )\n}\n\nexport default RegisterForm\n","import LoginForm from '../components/auths/LoginForm'\nimport RegisterForm from '../components/auths/RegisterForm'\nimport { AuthContext } from '../contexts/AuthContext'\nimport { useContext } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst Auth = ({ authRoute }) => {\n    const {\n        authState: { authLoading, isAuthenticated },\n    } = useContext(AuthContext)\n\n    let body\n\n    if (authLoading)\n        body = (\n            <div className=\"d-flex justify-content-center mt-2\">\n                <Spinner animation=\"border\" variant=\"info\" />\n            </div>\n        )\n    else if (isAuthenticated) return <Redirect to=\"/dashboard\" />\n    else\n        body = (\n            <>\n                {authRoute === 'login' && <LoginForm />}\n                {authRoute === 'register' && <RegisterForm />}\n            </>\n        )\n\n    return (\n        <div className=\"landing\">\n            <div className=\"dark-overlay\">\n                <div className=\"landing-inner\">\n                    <h1>LearnIt</h1>\n                    {body}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth\n","import {\n    ADD_POST,\n    POST_LOADED_FAIL,\n    POST_LOADED_SUCCESS,\n    DELETE_POST,\n    UPDATE_POST,\n    FIND_POST,\n} from '../contexts/Constants'\n\nexport const postReducer = (state, action) => {\n    const { type, payload } = action\n    switch (type) {\n        case POST_LOADED_SUCCESS:\n            return {\n                ...state,\n                posts: payload,\n                postLoading: false,\n            }\n        case POST_LOADED_FAIL:\n            return {\n                ...state,\n                posts: payload,\n                postLoading: false,\n            }\n\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [...state.posts, payload],\n            }\n\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter((post) => post._id !== payload),\n            }\n\n        case FIND_POST:\n            return { ...state, post: payload }\n\n        case UPDATE_POST:\n            const newPost = state.posts.map((post) =>\n                post._id === payload._id ? payload : post\n            )\n            return {\n                ...state,\n                posts: newPost,\n            }\n        default:\n            return state\n    }\n}\n","import { createContext, useReducer } from 'react'\nimport { postReducer } from '../reducer/postReducer'\nimport {\n    apiURL,\n    POST_LOADED_SUCCESS,\n    POST_LOADED_FAIL,\n    ADD_POST,\n    DELETE_POST,\n    UPDATE_POST,\n    FIND_POST,\n} from './Constants'\nimport axios from 'axios'\nimport { useState } from 'react'\n\nexport const PostContext = createContext()\n\nconst PostContextProvider = ({ children }) => {\n    //State\n    const [postState, dispatch] = useReducer(postReducer, {\n        post: null,\n        posts: [],\n        postLoading: true,\n    })\n\n    const [showAddPostModal, setShowAddPostModal] = useState(false)\n    const [showUpdatePost, setShowUpdatePost] = useState(false)\n    const [showDeletePost, setShowDeletePost] = useState(false)\n    const [showToast, setShowToast] = useState({\n        show: false,\n        message: '',\n        type: null,\n    })\n\n    //Get all posts\n    const getPosts = async () => {\n        try {\n            const response = await axios.get(`${apiURL}/post`)\n            if (response.data.success) {\n                dispatch({\n                    type: POST_LOADED_SUCCESS,\n                    payload: response.data.posts,\n                })\n            }\n        } catch (error) {\n            dispatch({\n                type: POST_LOADED_FAIL,\n            })\n        }\n    }\n\n    // Add Post\n    const addPost = async (newPost) => {\n        try {\n            const response = await axios.post(`${apiURL}/post`, newPost)\n            if (response.data.success) {\n                dispatch({\n                    type: ADD_POST,\n                    payload: response.data.post,\n                })\n                return response.data\n            }\n        } catch (error) {\n            return error.response.data\n                ? error.response.data\n                : { success: false, message: 'Server error!!!' }\n        }\n    }\n\n    // Delete post\n    const deletePost = async (postId) => {\n        try {\n            const response = await axios.delete(`${apiURL}/post/${postId}`)\n            if (response.data.success) {\n                dispatch({\n                    type: DELETE_POST,\n                    payload: postId,\n                })\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Find post when user is updating post\n    const findPost = (postId) => {\n        const post = postState.posts.find((post) => post._id === postId)\n        dispatch({\n            type: FIND_POST,\n            payload: post,\n        })\n    }\n\n    // Update Post\n    const updatePost = async (updatePost) => {\n        try {\n            const response = await axios.put(\n                `${apiURL}/post/${updatePost._id}`,\n                updatePost\n            )\n            if (response.data.success) {\n                dispatch({\n                    type: UPDATE_POST,\n                    payload: response.data.post,\n                })\n                return response.data\n            }\n        } catch (error) {\n            return error.response.data\n                ? error.response.data\n                : { success: false, message: 'Server error!!!' }\n        }\n    }\n\n    // Post Context Data\n    const postContextData = {\n        postState,\n        showAddPostModal,\n        setShowAddPostModal,\n        getPosts,\n        addPost,\n        deletePost,\n        updatePost,\n        findPost,\n        showToast,\n        setShowToast,\n        showUpdatePost,\n        setShowUpdatePost,\n        setShowDeletePost,\n        showDeletePost,\n    }\n\n    return (\n        <PostContext.Provider value={postContextData}>\n            {children}\n        </PostContext.Provider>\n    )\n}\nexport default PostContextProvider\n","export default __webpack_public_path__ + \"static/media/play-btn.4f64bd9b.svg\";","export default __webpack_public_path__ + \"static/media/pencil.f9418d96.svg\";","export default __webpack_public_path__ + \"static/media/trash.61142061.svg\";","import Button from 'react-bootstrap/esm/Button'\nimport playIcon from '../../assets/play-btn.svg'\nimport editIcon from '../../assets/pencil.svg'\nimport deleteIcon from '../../assets/trash.svg'\nimport { useContext } from 'react'\nimport { PostContext } from '../../contexts/PostContext'\n\nconst ActionButtons = ({ url, _id }) => {\n    const { findPost, setShowUpdatePost, setShowDeletePost } =\n        useContext(PostContext)\n\n    const choosePost = (postId) => {\n        findPost(postId)\n        setShowUpdatePost(true)\n    }\n\n    const chooseDeletePost = (postId) => {\n        findPost(postId)\n        setShowDeletePost(true)\n    }\n    return (\n        <>\n            <Button className=\"post-button\" href={url} target=\"_blank\">\n                <img src={playIcon} alt=\"play\" width=\"32\" height=\"32\" />\n            </Button>\n            <Button\n                className=\"post-button\"\n                onClick={choosePost.bind(this, _id)}\n            >\n                <img src={editIcon} alt=\"edit\" width=\"24\" height=\"24\" />\n            </Button>\n            <Button\n                className=\"post-button\"\n                onClick={chooseDeletePost.bind(this, _id)}\n            >\n                <img src={deleteIcon} alt=\"delete\" width=\"24\" height=\"24\" />\n            </Button>\n        </>\n    )\n}\n\nexport default ActionButtons\n","import Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/esm/Col'\nimport Badge from 'react-bootstrap/Badge'\nimport ActionButtons from './ActionButtons.js'\nimport Moment from 'react-moment'\n\nconst SinglePost = ({\n    post: { _id, status, title, description, url, createAt, updateAt },\n}) => {\n    return (\n        <Card\n            className=\"shadow\"\n            border={\n                status === 'Learned'\n                    ? 'success'\n                    : status === 'Learning'\n                    ? 'warning'\n                    : 'danger'\n            }\n        >\n            <Card.Body>\n                <Card.Title>\n                    <Row>\n                        <Col>\n                            <p className=\"post-title\">{title}</p>\n                            <Badge\n                                pill\n                                className={\n                                    status === 'Learned'\n                                        ? 'text-success bg-danger'\n                                        : status === 'Learning'\n                                        ? 'text-warning bg-success'\n                                        : 'text-danger bg-warning'\n                                }\n                            >\n                                {status}\n                            </Badge>\n                        </Col>\n\n                        <Col style={{ textAlign: 'right' }}>\n                            <ActionButtons url={url} _id={_id} />\n                        </Col>\n                    </Row>\n                </Card.Title>\n                <Card.Text>{description}</Card.Text>\n                <Card.Text style={{ textAlign: 'right' }}>\n                    Created At :{' '}\n                    <Moment format=\"YYYY/ MM/ DD hh:mm\">{createAt}</Moment>\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default SinglePost\n","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/esm/Form'\nimport { useContext, useState } from 'react'\nimport { PostContext } from '../../contexts/PostContext'\n\nconst AddPostModal = () => {\n    //Context\n    const { showAddPostModal, setShowAddPostModal, addPost, setShowToast } =\n        useContext(PostContext)\n\n    const [newPost, setNewPost] = useState({\n        title: '',\n        description: '',\n        url: '',\n        status: 'To Learn',\n    })\n\n    const { title, url, description } = newPost\n\n    const onChangeNewPostForm = (event) => {\n        setNewPost({ ...newPost, [event.target.name]: event.target.value })\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault()\n        const { success, message } = await addPost(newPost)\n        closeDialog()\n        setShowToast({\n            show: true,\n            message,\n            type: success ? 'success' : 'danger',\n        })\n    }\n\n    const closeDialog = () => {\n        setNewPost({ title: '', description: '', url: '', status: 'To Learn' })\n        setShowAddPostModal(false)\n    }\n    return (\n        <Modal show={showAddPostModal} onHide={closeDialog}>\n            <Modal.Header closeButton>\n                <Modal.Title id=\"test\">What do you want to learn?</Modal.Title>\n            </Modal.Header>\n            <Form onSubmit={onSubmit}>\n                <Modal.Body>\n                    <Form.Group className=\"m-3\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Title\"\n                            name=\"title\"\n                            required\n                            aria-describedby=\"title-help\"\n                            value={title}\n                            onChange={onChangeNewPostForm}\n                        />\n                        <Form.Text id=\"title-help\" muted>\n                            Required\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"m-3\">\n                        <Form.Control\n                            as=\"textarea\"\n                            placeholder=\"Description\"\n                            row={3}\n                            name=\"description\"\n                            value={description}\n                            onChange={onChangeNewPostForm}\n                        />\n                    </Form.Group>\n                    <Form.Group className=\"m-3\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Youtube Tutorial URL\"\n                            name=\"url\"\n                            value={url}\n                            onChange={onChangeNewPostForm}\n                        />\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeDialog}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Learn It!\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    )\n}\n\nexport default AddPostModal\n","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/esm/Form'\nimport { useContext, useState, useEffect } from 'react'\nimport { PostContext } from '../../contexts/PostContext'\n\nconst UpdatePost = () => {\n    //Context\n    const {\n        postState: { post },\n        showUpdatePost,\n        setShowUpdatePost,\n        updatePost,\n        setShowToast,\n    } = useContext(PostContext)\n\n    const [updatedPost, setUpdatedPost] = useState(post)\n\n    useEffect(() => setUpdatedPost(post), [post])\n\n    const { title, url, description, status } = updatedPost\n\n    const onChangeUpdatedPostForm = (event) => {\n        setUpdatedPost({\n            ...updatedPost,\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault()\n        const { success, message } = await updatePost(updatedPost)\n        closeDialog()\n        setShowToast({\n            show: true,\n            message,\n            type: success ? 'success' : 'danger',\n        })\n    }\n\n    const closeDialog = () => {\n        setUpdatedPost(post)\n        setShowUpdatePost(false)\n    }\n    return (\n        <Modal show={showUpdatePost} onHide={closeDialog}>\n            <Modal.Header closeButton>\n                <Modal.Title id=\"test\">Making progress?</Modal.Title>\n            </Modal.Header>\n            <Form onSubmit={onSubmit}>\n                <Modal.Body>\n                    <Form.Group className=\"m-3\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Title\"\n                            name=\"title\"\n                            required\n                            aria-describedby=\"title-help\"\n                            value={title}\n                            onChange={onChangeUpdatedPostForm}\n                        />\n                    </Form.Group>\n                    <Form.Group className=\"m-3\">\n                        <Form.Control\n                            as=\"textarea\"\n                            placeholder=\"Description\"\n                            row={3}\n                            name=\"description\"\n                            value={description}\n                            onChange={onChangeUpdatedPostForm}\n                        />\n                    </Form.Group>\n                    <Form.Group className=\"m-3\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Youtube Tutorial URL\"\n                            name=\"url\"\n                            value={url}\n                            onChange={onChangeUpdatedPostForm}\n                        />\n                    </Form.Group>\n                    <Form.Group className=\"m-3\">\n                        <Form.Control\n                            as=\"select\"\n                            name=\"status\"\n                            value={status}\n                            onChange={onChangeUpdatedPostForm}\n                        >\n                            <option value=\"To Learn\">To Learn</option>\n                            <option value=\"Learning\">Learning</option>\n                            <option value=\"Learned\">Learned</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeDialog}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Update\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    )\n}\n\nexport default UpdatePost\n","export default __webpack_public_path__ + \"static/media/plus-circle-fill.a9d0f92d.svg\";","import React from 'react'\nimport { PostContext } from '../../contexts/PostContext'\nimport { useContext } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nconst DeletePost = () => {\n    const {\n        postState: { post },\n        deletePost,\n        setShowToast,\n        showDeletePost,\n        setShowDeletePost,\n    } = useContext(PostContext)\n\n    const closeDialog = () => {\n        setShowDeletePost(false)\n    }\n    const onDelete = () => {\n        deletePost(post._id)\n        closeDialog()\n        setShowToast({\n            show: true,\n            message: 'This work is deleted',\n            type: 'success',\n        })\n    }\n\n    return (\n        <Modal show={showDeletePost} onHide={closeDialog}>\n            <Modal.Header>\n                <Modal.Title id=\"test\">You sure want delete?</Modal.Title>\n            </Modal.Header>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={closeDialog}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={onDelete}>\n                    Delete\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default DeletePost\n","import { PostContext } from '../contexts/PostContext'\nimport { AuthContext } from '../contexts/AuthContext'\nimport { useContext, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Card from 'react-bootstrap/Card'\nimport Toast from 'react-bootstrap/Toast'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport SinglePost from '../components/posts/SinglePost'\nimport AddPostModal from '../components/posts/AddPostModal'\nimport UpdatePost from '../components/posts/UpdatePost'\nimport addIcon from '../assets/plus-circle-fill.svg'\nimport DeletePost from '../components/posts/DeletePost'\n\nconst Dashboard = () => {\n    const {\n        authState: {\n            user: { username },\n        },\n    } = useContext(AuthContext)\n    // Context\n    const {\n        postState: { post, posts, postsLoading },\n        getPosts,\n        setShowAddPostModal,\n        showToast: { show, message, type },\n        setShowToast,\n    } = useContext(PostContext)\n\n    // Start get all posts\n    useEffect(() => {\n        getPosts()\n    }, [])\n\n    let body = null\n\n    if (postsLoading) {\n        body = (\n            <div className=\"spinner-container\">\n                <Spinner animation=\"border\" variant=\"info\" />\n            </div>\n        )\n    } else if (posts.length === 0) {\n        body = (\n            <>\n                <Card className=\"text-center mx-5 my-5\">\n                    <Card.Header as=\"h1\">Hi {username}</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Welcome to StudyList</Card.Title>\n                        <Card.Text>\n                            Click the button below to track your first skill to\n                            learn\n                        </Card.Text>\n                        <Button\n                            variant=\"primary\"\n                            onClick={setShowAddPostModal.bind(this, true)}\n                        >\n                            Start!\n                        </Button>\n                    </Card.Body>\n                </Card>\n            </>\n        )\n    } else {\n        body = (\n            <>\n                <Row className=\"row-cols-1 row-cols-md-3 g-4 mx-auto mt-3\">\n                    {posts.map((post) => (\n                        <Col key={post._id} className=\"my-2\">\n                            <SinglePost post={post} />\n                        </Col>\n                    ))}\n                </Row>\n                <OverlayTrigger\n                    placement=\"left\"\n                    overlay={<Tooltip>Add a new thing to learn!</Tooltip>}\n                >\n                    <Button\n                        className=\"btn-floating\"\n                        onClick={setShowAddPostModal.bind(this, true)}\n                    >\n                        <img\n                            src={addIcon}\n                            alt=\"add-post\"\n                            width=\"60\"\n                            height=\"60\"\n                        />\n                    </Button>\n                </OverlayTrigger>\n            </>\n        )\n    }\n\n    return (\n        <div>\n            {body}\n            <AddPostModal />\n            <DeletePost />\n            {post !== null && <UpdatePost />}\n            {/* After post is added, show toast */}\n            <Toast\n                show={show}\n                style={{ position: 'fixed', top: '20%', right: '10px' }}\n                className={`bg-${type} text-white`}\n                onClose={setShowToast.bind(this, {\n                    show: false,\n                    message: '',\n                    type: null,\n                })}\n                delay={3000}\n                autohide\n            >\n                <Toast.Body>\n                    <strong>{message}</strong>\n                </Toast.Body>\n            </Toast>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import { AuthContext } from '../contexts/AuthContext'\nimport { useContext } from 'react'\n\nconst About = () => {\n    const {\n        authState: {\n            user: { username },\n        },\n    } = useContext(AuthContext)\n    return <h1 className=\"mt-3\">Hello ! I'm {username}</h1>\n}\n\nexport default About\n","export default __webpack_public_path__ + \"static/media/logo.64b6abdb.svg\";","export default __webpack_public_path__ + \"static/media/logout.8e64276b.svg\";","import Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport learnItLogo from '../../assets/logo.svg'\nimport logoutIcon from '../../assets/logout.svg'\n\nimport Button from 'react-bootstrap/Button'\nimport { Link } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { AuthContext } from '../../contexts/AuthContext'\n\nconst NavBarMenu = () => {\n    const {\n        authState: {\n            user: { username },\n        },\n        logoutUser,\n    } = useContext(AuthContext)\n\n    const logout = () => logoutUser()\n\n    // logo style\n    const logoStyle = {\n        with: '40px',\n        height: '40px',\n        margin: '0 5px',\n    }\n\n    const logOutStyle = {\n        with: '24px',\n        height: '24px',\n        margin: '0 5px',\n    }\n    // text style\n    const styleText = 'font-weight-bolder text-white'\n    return (\n        <Navbar\n            expand=\"lg\"\n            bg=\"danger\"\n            variant=\"dark\"\n            className=\"shadow\"\n            style={{ padding: '10px' }}\n        >\n            <Navbar.Brand className=\"font-weight-bolder text-white\">\n                <img src={learnItLogo} alt=\"Logo\" style={logoStyle} />\n                LearnIt\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse\n                id=\"basic-navbar-nav\"\n                className=\"justify-content-between\"\n            >\n                <Nav className=\"mr-auto\" variant=\"tabs\">\n                    <Nav.Item>\n                        <Nav.Link\n                            className={styleText}\n                            to=\"/dashboard\"\n                            as={Link}\n                        >\n                            Dashboard\n                        </Nav.Link>\n                    </Nav.Item>\n\n                    <Nav.Item>\n                        <Nav.Link className={styleText} to=\"/about\" as={Link}>\n                            About\n                        </Nav.Link>\n                    </Nav.Item>\n                </Nav>\n                <Nav className=\"align-items-center\">\n                    <Nav.Link className={styleText} disabled>\n                        Welcome {username}\n                    </Nav.Link>\n                    <Button\n                        variant=\"success\"\n                        className={styleText}\n                        onClick={logout}\n                    >\n                        <img\n                            src={logoutIcon}\n                            alt=\"logoutIcon\"\n                            style={logOutStyle}\n                        />\n                        Logout\n                    </Button>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBarMenu\n","import { Route, Redirect } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { AuthContext } from '../../contexts/AuthContext'\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport NavBarMenu from '../layouts/NavBarMenu'\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n    const {\n        authState: { authLoading, isAuthenticated },\n    } = useContext(AuthContext)\n\n    if (authLoading)\n        return (\n            <div className=\"spinner-container\">\n                <Spinner animation=\"border\" variant=\"info\" />\n            </div>\n        )\n\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                isAuthenticated ? (\n                    <>\n                        <NavBarMenu />\n                        <Component {...rest} {...props} />\n                    </>\n                ) : (\n                    <Redirect to=\"/login\" />\n                )\n            }\n        />\n    )\n}\n\nexport default ProtectedRoute\n","import './App.css'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Landing from './components/layouts/Landing'\nimport Auth from './views/Auth'\nimport AuthContextProvider from './contexts/AuthContext'\nimport Dashboard from './views/Dashboard'\nimport About from './views/About'\nimport ProtectedRoute from './components/routing/ProtectedRoute'\nimport PostContextProvider from './contexts/PostContext'\n\nfunction App() {\n    return (\n        <AuthContextProvider>\n            <PostContextProvider>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" component={Landing}></Route>\n                        <Route\n                            exact\n                            path=\"/login\"\n                            render={(props) => (\n                                <Auth {...props} authRoute=\"login\"></Auth>\n                            )}\n                        ></Route>\n                        <Route\n                            exact\n                            path=\"/register\"\n                            render={(props) => (\n                                <Auth {...props} authRoute=\"register\"></Auth>\n                            )}\n                        ></Route>\n                        <ProtectedRoute\n                            exact\n                            path=\"/dashboard\"\n                            component={Dashboard}\n                        ></ProtectedRoute>\n                        <ProtectedRoute\n                            exact\n                            path=\"/about\"\n                            component={About}\n                        ></ProtectedRoute>\n                    </Switch>\n                </Router>\n            </PostContextProvider>\n        </AuthContextProvider>\n    )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}